{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFolder\\\\VisualStudioCode\\\\Project\\\\Web\\\\bccinema\\\\frontend\\\\src\\\\components\\\\EndowList\\\\EndowList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import \"./EndowList.css\";\n// import { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\n\n// function EndowList() {\n//   const [endows, setEndows] = useState([]);\n//   const [index, setIndex] = useState(0);\n//   const itemsPerPage = 3;\n\n//   // fetch data (giữ nguyên)\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/endow\")\n//       .then((res) => {\n//         if (!res.ok) throw new Error(\"Network error\");\n//         return res.json();\n//       })\n//       .then((data) => setEndows(data || []))\n//       .catch((err) => console.error(\"Lỗi fetch endows:\", err));\n//   }, []);\n\n//   // navigation - Đã cập nhật để chỉ còn logic vòng lặp\n//   const next = () => {\n//     // Vòng lặp: Nếu index = endows.length - 1, (index + 1) % endows.length = 0\n//     setIndex((prev) => (prev + 1) % endows.length);\n//   };\n//   const prev = () => {\n//     // Vòng lặp: Nếu index = 0, (0 - 1 + length) % length = length - 1\n//     setIndex((prev) => (prev - 1 + endows.length) % endows.length);\n//   };\n\n//   // tính phần trăm dịch chuyển (giữ nguyên)\n//   const offsetPercent = (100 / itemsPerPage) * index;\n\n//   return (\n//     <section className=\"endow-section\">\n//       <div className=\"endow-container\">\n//         <div className=\"endow-title\">\n//           Ưu đãi\n//           <br />\n//           đặc biệt\n//         </div>\n\n//         <div className=\"endow-slider-area\">\n//           {/* Nút prev chỉ hiển thị nếu có nhiều hơn số itemsPerPage */}\n//           {endows.length > itemsPerPage && (\n//             <button className=\"endow-arrow left\" onClick={prev}>\n//               <FaChevronLeft />\n//             </button>\n//           )}\n\n//           <div className=\"endow-viewport\">\n//             <div\n//               className=\"endow-track\"\n//               style={{\n//                 transform: `translateX(-${offsetPercent}%)`,\n//                 transition: \"transform 0.45s ease\",\n//               }}\n//             >\n//               {endows.map((item) => (\n//                 <article\n//                   key={item.ID}\n//                   className=\"endow-card\"\n//                   onClick={() => (window.location.href = `/endow/${item.ID}`)}\n//                 >\n//                   <img\n//                     className=\"endow-poster\"\n//                     alt={item.name}\n//                     src={require(`../../assets/images/Endow/${item.ID}.jpg`)}\n//                     onError={(e) => {\n//                       try {\n//                       } catch {\n//                         e.target.src = \"\";\n//                       }\n//                     }}\n//                   />\n//                   <h3 className=\"endow-name\">{item.name}</h3>\n//                 </article>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* Nút next chỉ hiển thị nếu có nhiều hơn số itemsPerPage */}\n//           {endows.length > itemsPerPage && (\n//             <button className=\"endow-arrow right\" onClick={next}>\n//               <FaChevronRight />\n//             </button>\n//           )}\n//         </div>\n//       </div>\n//     </section>\n//   );\n// }\n\n// export default EndowList;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./EndowList.css\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EndowList() {\n  _s();\n  const [endows, setEndows] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [transitioning, setTransitioning] = useState(true);\n  const itemsPerPage = 3;\n  const trackRef = useRef(null);\n\n  // fetch data\n  useEffect(() => {\n    fetch(\"http://localhost:5000/endow\").then(res => {\n      if (!res.ok) throw new Error(\"Network error\");\n      return res.json();\n    }).then(data => {\n      if (data && data.length > 0) {\n        setEndows(data);\n        setIndex(itemsPerPage); // bắt đầu ở slide thực (sau khi clone)\n      }\n    }).catch(err => console.error(\"Lỗi fetch endows:\", err));\n  }, []);\n\n  // tạo mảng hiển thị có clone\n  const getClonedEndows = () => {\n    if (endows.length === 0) return [];\n    return [...endows.slice(-itemsPerPage),\n    // clone cuối lên đầu\n    ...endows, ...endows.slice(0, itemsPerPage) // clone đầu xuống cuối\n    ];\n  };\n  const clonedEndows = getClonedEndows();\n\n  // điều hướng\n  const next = () => {\n    if (endows.length <= itemsPerPage) return;\n    setIndex(prev => prev + 1);\n  };\n  const prev = () => {\n    if (endows.length <= itemsPerPage) return;\n    setIndex(prev => prev - 1);\n  };\n\n  // xử lý khi transition kết thúc (reset index khi chạm clone)\n  const handleTransitionEnd = () => {\n    const lastIndex = endows.length + itemsPerPage - 1;\n    if (index <= itemsPerPage - 1) {\n      // đang ở clone đầu -> reset về cuối thật\n      setTransitioning(false);\n      setIndex(endows.length + index % itemsPerPage);\n    } else if (index >= lastIndex + 1) {\n      // đang ở clone cuối -> reset về đầu thật\n      setTransitioning(false);\n      setIndex(itemsPerPage + index % endows.length);\n    }\n  };\n  useEffect(() => {\n    if (!transitioning) {\n      // bật lại transition sau khi reset\n      requestAnimationFrame(() => setTransitioning(true));\n    }\n  }, [transitioning]);\n\n  // style transform\n  const offsetPercent = 100 / itemsPerPage * index;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"endow-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"endow-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"endow-title\",\n        children: [\"\\u01AFu \\u0111\\xE3i\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), \"\\u0111\\u1EB7c bi\\u1EC7t\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"endow-slider-area\",\n        children: [endows.length > itemsPerPage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"endow-arrow left\",\n          onClick: prev,\n          children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"endow-viewport\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: trackRef,\n            className: \"endow-track\",\n            style: {\n              transform: `translateX(-${offsetPercent}%)`,\n              transition: transitioning ? \"transform 0.45s ease\" : \"none\"\n            },\n            onTransitionEnd: handleTransitionEnd,\n            children: clonedEndows.map((item, idx) => /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"endow-card\",\n              onClick: () => window.location.href = `/endow/${item.ID}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"endow-poster\",\n                alt: item.name,\n                src: require(`../../assets/images/Endow/${item.ID}.jpg`),\n                onError: e => {\n                  e.target.src = \"\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"endow-name\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, `${item.ID}-${idx}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), endows.length > itemsPerPage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"endow-arrow right\",\n          onClick: next,\n          children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(EndowList, \"SY/fIRd7f3pTiK+Ts5sMDBcB868=\");\n_c = EndowList;\nexport default EndowList;\nvar _c;\n$RefreshReg$(_c, \"EndowList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","FaChevronLeft","FaChevronRight","jsxDEV","_jsxDEV","EndowList","_s","endows","setEndows","index","setIndex","transitioning","setTransitioning","itemsPerPage","trackRef","fetch","then","res","ok","Error","json","data","length","catch","err","console","error","getClonedEndows","slice","clonedEndows","next","prev","handleTransitionEnd","lastIndex","requestAnimationFrame","offsetPercent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","style","transform","transition","onTransitionEnd","map","item","idx","window","location","href","ID","alt","name","src","require","onError","e","target","_c","$RefreshReg$"],"sources":["D:/MyFolder/VisualStudioCode/Project/Web/bccinema/frontend/src/components/EndowList/EndowList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"./EndowList.css\";\r\n// import { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\n\r\n// function EndowList() {\r\n//   const [endows, setEndows] = useState([]);\r\n//   const [index, setIndex] = useState(0);\r\n//   const itemsPerPage = 3;\r\n\r\n//   // fetch data (giữ nguyên)\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/endow\")\r\n//       .then((res) => {\r\n//         if (!res.ok) throw new Error(\"Network error\");\r\n//         return res.json();\r\n//       })\r\n//       .then((data) => setEndows(data || []))\r\n//       .catch((err) => console.error(\"Lỗi fetch endows:\", err));\r\n//   }, []);\r\n\r\n//   // navigation - Đã cập nhật để chỉ còn logic vòng lặp\r\n//   const next = () => {\r\n//     // Vòng lặp: Nếu index = endows.length - 1, (index + 1) % endows.length = 0\r\n//     setIndex((prev) => (prev + 1) % endows.length);\r\n//   };\r\n//   const prev = () => {\r\n//     // Vòng lặp: Nếu index = 0, (0 - 1 + length) % length = length - 1\r\n//     setIndex((prev) => (prev - 1 + endows.length) % endows.length);\r\n//   };\r\n\r\n//   // tính phần trăm dịch chuyển (giữ nguyên)\r\n//   const offsetPercent = (100 / itemsPerPage) * index;\r\n\r\n//   return (\r\n//     <section className=\"endow-section\">\r\n//       <div className=\"endow-container\">\r\n//         <div className=\"endow-title\">\r\n//           Ưu đãi\r\n//           <br />\r\n//           đặc biệt\r\n//         </div>\r\n\r\n//         <div className=\"endow-slider-area\">\r\n//           {/* Nút prev chỉ hiển thị nếu có nhiều hơn số itemsPerPage */}\r\n//           {endows.length > itemsPerPage && (\r\n//             <button className=\"endow-arrow left\" onClick={prev}>\r\n//               <FaChevronLeft />\r\n//             </button>\r\n//           )}\r\n\r\n//           <div className=\"endow-viewport\">\r\n//             <div\r\n//               className=\"endow-track\"\r\n//               style={{\r\n//                 transform: `translateX(-${offsetPercent}%)`,\r\n//                 transition: \"transform 0.45s ease\",\r\n//               }}\r\n//             >\r\n//               {endows.map((item) => (\r\n//                 <article\r\n//                   key={item.ID}\r\n//                   className=\"endow-card\"\r\n//                   onClick={() => (window.location.href = `/endow/${item.ID}`)}\r\n//                 >\r\n//                   <img\r\n//                     className=\"endow-poster\"\r\n//                     alt={item.name}\r\n//                     src={require(`../../assets/images/Endow/${item.ID}.jpg`)}\r\n//                     onError={(e) => {\r\n//                       try {\r\n//                       } catch {\r\n//                         e.target.src = \"\";\r\n//                       }\r\n//                     }}\r\n//                   />\r\n//                   <h3 className=\"endow-name\">{item.name}</h3>\r\n//                 </article>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Nút next chỉ hiển thị nếu có nhiều hơn số itemsPerPage */}\r\n//           {endows.length > itemsPerPage && (\r\n//             <button className=\"endow-arrow right\" onClick={next}>\r\n//               <FaChevronRight />\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n// export default EndowList;\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./EndowList.css\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\n\r\nfunction EndowList() {\r\n  const [endows, setEndows] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [transitioning, setTransitioning] = useState(true);\r\n  const itemsPerPage = 3;\r\n  const trackRef = useRef(null);\r\n\r\n  // fetch data\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/endow\")\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Network error\");\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data && data.length > 0) {\r\n          setEndows(data);\r\n          setIndex(itemsPerPage); // bắt đầu ở slide thực (sau khi clone)\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Lỗi fetch endows:\", err));\r\n  }, []);\r\n\r\n  // tạo mảng hiển thị có clone\r\n  const getClonedEndows = () => {\r\n    if (endows.length === 0) return [];\r\n    return [\r\n      ...endows.slice(-itemsPerPage), // clone cuối lên đầu\r\n      ...endows,\r\n      ...endows.slice(0, itemsPerPage), // clone đầu xuống cuối\r\n    ];\r\n  };\r\n\r\n  const clonedEndows = getClonedEndows();\r\n\r\n  // điều hướng\r\n  const next = () => {\r\n    if (endows.length <= itemsPerPage) return;\r\n    setIndex((prev) => prev + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    if (endows.length <= itemsPerPage) return;\r\n    setIndex((prev) => prev - 1);\r\n  };\r\n\r\n  // xử lý khi transition kết thúc (reset index khi chạm clone)\r\n  const handleTransitionEnd = () => {\r\n    const lastIndex = endows.length + itemsPerPage - 1;\r\n    if (index <= itemsPerPage - 1) {\r\n      // đang ở clone đầu -> reset về cuối thật\r\n      setTransitioning(false);\r\n      setIndex(endows.length + (index % itemsPerPage));\r\n    } else if (index >= lastIndex + 1) {\r\n      // đang ở clone cuối -> reset về đầu thật\r\n      setTransitioning(false);\r\n      setIndex(itemsPerPage + (index % endows.length));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!transitioning) {\r\n      // bật lại transition sau khi reset\r\n      requestAnimationFrame(() => setTransitioning(true));\r\n    }\r\n  }, [transitioning]);\r\n\r\n  // style transform\r\n  const offsetPercent = (100 / itemsPerPage) * index;\r\n\r\n  return (\r\n    <section className=\"endow-section\">\r\n      <div className=\"endow-container\">\r\n        <div className=\"endow-title\">\r\n          Ưu đãi\r\n          <br />\r\n          đặc biệt\r\n        </div>\r\n\r\n        <div className=\"endow-slider-area\">\r\n          {endows.length > itemsPerPage && (\r\n            <button className=\"endow-arrow left\" onClick={prev}>\r\n              <FaChevronLeft />\r\n            </button>\r\n          )}\r\n\r\n          <div className=\"endow-viewport\">\r\n            <div\r\n              ref={trackRef}\r\n              className=\"endow-track\"\r\n              style={{\r\n                transform: `translateX(-${offsetPercent}%)`,\r\n                transition: transitioning ? \"transform 0.45s ease\" : \"none\",\r\n              }}\r\n              onTransitionEnd={handleTransitionEnd}\r\n            >\r\n              {clonedEndows.map((item, idx) => (\r\n                <article\r\n                  key={`${item.ID}-${idx}`}\r\n                  className=\"endow-card\"\r\n                  onClick={() => (window.location.href = `/endow/${item.ID}`)}\r\n                >\r\n                  <img\r\n                    className=\"endow-poster\"\r\n                    alt={item.name}\r\n                    src={require(`../../assets/images/Endow/${item.ID}.jpg`)}\r\n                    onError={(e) => {\r\n                      e.target.src = \"\";\r\n                    }}\r\n                  />\r\n                  <h3 className=\"endow-name\">{item.name}</h3>\r\n                </article>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {endows.length > itemsPerPage && (\r\n            <button className=\"endow-arrow right\" onClick={next}>\r\n              <FaChevronRight />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EndowList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}