{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFolder\\\\VisualStudioCode\\\\Project\\\\Web\\\\bccinema\\\\frontend\\\\src\\\\components\\\\EndowList\\\\EndowList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import \"./EndowList.css\";\n// import { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\n\n// function EndowList() {\n//   const [endows, setEndows] = useState([]);\n//   const [index, setIndex] = useState(0);\n//   const itemsPerPage = 3;\n\n//   // fetch data (giữ nguyên)\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/endow\")\n//       .then((res) => {\n//         if (!res.ok) throw new Error(\"Network error\");\n//         return res.json();\n//       })\n//       .then((data) => setEndows(data || []))\n//       .catch((err) => console.error(\"Lỗi fetch endows:\", err));\n//   }, []);\n\n//   // navigation - Đã cập nhật để chỉ còn logic vòng lặp\n//   const next = () => {\n//     // Vòng lặp: Nếu index = endows.length - 1, (index + 1) % endows.length = 0\n//     setIndex((prev) => (prev + 1) % endows.length);\n//   };\n//   const prev = () => {\n//     // Vòng lặp: Nếu index = 0, (0 - 1 + length) % length = length - 1\n//     setIndex((prev) => (prev - 1 + endows.length) % endows.length);\n//   };\n\n//   // tính phần trăm dịch chuyển (giữ nguyên)\n//   const offsetPercent = (100 / itemsPerPage) * index;\n\n//   return (\n//     <section className=\"endow-section\">\n//       <div className=\"endow-container\">\n//         <div className=\"endow-title\">\n//           Ưu đãi\n//           <br />\n//           đặc biệt\n//         </div>\n\n//         <div className=\"endow-slider-area\">\n//           {/* Nút prev chỉ hiển thị nếu có nhiều hơn số itemsPerPage */}\n//           {endows.length > itemsPerPage && (\n//             <button className=\"endow-arrow left\" onClick={prev}>\n//               <FaChevronLeft />\n//             </button>\n//           )}\n\n//           <div className=\"endow-viewport\">\n//             <div\n//               className=\"endow-track\"\n//               style={{\n//                 transform: `translateX(-${offsetPercent}%)`,\n//                 transition: \"transform 0.45s ease\",\n//               }}\n//             >\n//               {endows.map((item) => (\n//                 <article\n//                   key={item.ID}\n//                   className=\"endow-card\"\n//                   onClick={() => (window.location.href = `/endow/${item.ID}`)}\n//                 >\n//                   <img\n//                     className=\"endow-poster\"\n//                     alt={item.name}\n//                     src={require(`../../assets/images/Endow/${item.ID}.jpg`)}\n//                     onError={(e) => {\n//                       try {\n//                       } catch {\n//                         e.target.src = \"\";\n//                       }\n//                     }}\n//                   />\n//                   <h3 className=\"endow-name\">{item.name}</h3>\n//                 </article>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* Nút next chỉ hiển thị nếu có nhiều hơn số itemsPerPage */}\n//           {endows.length > itemsPerPage && (\n//             <button className=\"endow-arrow right\" onClick={next}>\n//               <FaChevronRight />\n//             </button>\n//           )}\n//         </div>\n//       </div>\n//     </section>\n//   );\n// }\n\n// export default EndowList;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./EndowList.css\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EndowList() {\n  _s();\n  const [endows, setEndows] = useState([]);\n  const [offsetIndex, setOffsetIndex] = useState(0); // index inside extended array\n  const [isAnimating, setIsAnimating] = useState(true); // control css transition on track\n  const viewportRef = useRef(null);\n  const trackRef = useRef(null);\n  const itemsPerPage = 3;\n  const gap = 20; // PHẢI KHỚP VỚI CSS: .endow-track { gap: 20px; }\n  const [itemWidth, setItemWidth] = useState(300); // Giá trị giả định ban đầu\n\n  // fetch data (giữ nguyên)\n  useEffect(() => {\n    fetch(\"http://localhost:5000/endow\").then(res => {\n      if (!res.ok) throw new Error(\"Network error\");\n      return res.json();\n    }).then(data => setEndows(data || [])).catch(err => console.error(\"Lỗi fetch endows:\", err));\n  }, []);\n\n  // 1. Tính toán itemWidth dựa trên viewport và gap\n  useEffect(() => {\n    function recompute() {\n      if (!viewportRef.current) return;\n      const w = viewportRef.current.clientWidth;\n      const computed = Math.floor((w - gap * (itemsPerPage - 1)) / itemsPerPage);\n      setItemWidth(computed > 100 ? computed : 300);\n    }\n    recompute();\n    window.addEventListener(\"resize\", recompute);\n    return () => window.removeEventListener(\"resize\", recompute);\n  }, [itemsPerPage]);\n\n  // 2. Khởi tạo vị trí ban đầu (Bản sao giữa)\n  useEffect(() => {\n    if (endows.length === 0) return;\n    setIsAnimating(false); // Vô hiệu hóa animation\n    setOffsetIndex(endows.length); // Đặt vị trí vào bản sao giữa\n    // Bật lại animation sau khi DOM đã render\n    const id = setTimeout(() => setIsAnimating(true), 20);\n    return () => clearTimeout(id);\n  }, [endows.length, itemWidth]);\n\n  // Extended array (3 copies)\n  const extended = [...endows, ...endows, ...endows];\n  const extendedCount = extended.length;\n  // Bước dịch chuyển (tính bằng pixel)\n  const step = itemWidth + gap;\n\n  // 3. Navigation\n  const next = () => {\n    if (endows.length === 0) return;\n    setIsAnimating(true);\n    setOffsetIndex(s => s + 1);\n  };\n  const prev = () => {\n    if (endows.length === 0) return;\n    setIsAnimating(true);\n    setOffsetIndex(s => s - 1);\n  };\n\n  // 4. Logic reset vị trí (Teleport) khi transition kết thúc\n  const onTrackTransitionEnd = () => {\n    if (endows.length === 0) return;\n\n    // Nếu đã trượt ra ngoài bản sao giữa (quá xa bên phải: index >= 2*length)\n    if (offsetIndex >= endows.length * 2) {\n      setIsAnimating(false);\n      setOffsetIndex(s => s - endows.length);\n      setTimeout(() => setIsAnimating(true), 20);\n    }\n    // Nếu đã trượt ra ngoài bản sao giữa (quá xa bên trái: index < length)\n    else if (offsetIndex < endows.length) {\n      setIsAnimating(false);\n      setOffsetIndex(s => s + endows.length);\n      setTimeout(() => setIsAnimating(true), 20);\n    }\n  };\n\n  // track inline style\n  const trackStyle = {\n    // Chiều rộng track phải bằng tổng chiều rộng của tất cả card\n    width: `${extendedCount * step - gap}px`,\n    // Dịch chuyển theo pixel\n    transform: `translateX(-${offsetIndex * step}px)`,\n    // Điều khiển transition\n    transition: isAnimating ? \"transform 0.45s cubic-bezier(.22,.9,.18,1)\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"endow-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"endow-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"endow-title\",\n        children: [\"\\u01AFu \\u0111\\xE3i\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), \"\\u0111\\u1EB7c bi\\u1EC7t\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"endow-slider-area\",\n        children: [endows.length > itemsPerPage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"endow-arrow left\",\n          onClick: prev,\n          children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"endow-viewport\",\n          ref: viewportRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"endow-track\",\n            ref: trackRef,\n            style: trackStyle,\n            onTransitionEnd: onTrackTransitionEnd,\n            children: extended.map((item, idx) => /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"endow-card\",\n              onClick: () => window.location.href = `/endow/${item.ID}`\n              // Thiết lập chiều rộng card bằng pixel\n              ,\n              style: {\n                width: `${itemWidth}px`,\n                minWidth: `${itemWidth}px`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"endow-poster\",\n                alt: item.name\n                // FIX LỖI CÚ PHÁP REQUIRE: Sử dụng phép nối chuỗi an toàn\n                ,\n                src: require(`../../assets/images/Endow/${item.ID}.jpg`),\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = \"\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"endow-name\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)]\n            }, `${item.ID}-${idx}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), endows.length > itemsPerPage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"endow-arrow right\",\n          onClick: next,\n          children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(EndowList, \"RlGYM/n0Sgx5LIHaOUJ4zlmrHYA=\");\n_c = EndowList;\nexport default EndowList;\nvar _c;\n$RefreshReg$(_c, \"EndowList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","FaChevronLeft","FaChevronRight","jsxDEV","_jsxDEV","EndowList","_s","endows","setEndows","offsetIndex","setOffsetIndex","isAnimating","setIsAnimating","viewportRef","trackRef","itemsPerPage","gap","itemWidth","setItemWidth","fetch","then","res","ok","Error","json","data","catch","err","console","error","recompute","current","w","clientWidth","computed","Math","floor","window","addEventListener","removeEventListener","length","id","setTimeout","clearTimeout","extended","extendedCount","step","next","s","prev","onTrackTransitionEnd","trackStyle","width","transform","transition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","style","onTransitionEnd","map","item","idx","location","href","ID","minWidth","alt","name","src","require","onError","e","target","onerror","_c","$RefreshReg$"],"sources":["D:/MyFolder/VisualStudioCode/Project/Web/bccinema/frontend/src/components/EndowList/EndowList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"./EndowList.css\";\r\n// import { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\n\r\n// function EndowList() {\r\n//   const [endows, setEndows] = useState([]);\r\n//   const [index, setIndex] = useState(0);\r\n//   const itemsPerPage = 3;\r\n\r\n//   // fetch data (giữ nguyên)\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/endow\")\r\n//       .then((res) => {\r\n//         if (!res.ok) throw new Error(\"Network error\");\r\n//         return res.json();\r\n//       })\r\n//       .then((data) => setEndows(data || []))\r\n//       .catch((err) => console.error(\"Lỗi fetch endows:\", err));\r\n//   }, []);\r\n\r\n//   // navigation - Đã cập nhật để chỉ còn logic vòng lặp\r\n//   const next = () => {\r\n//     // Vòng lặp: Nếu index = endows.length - 1, (index + 1) % endows.length = 0\r\n//     setIndex((prev) => (prev + 1) % endows.length);\r\n//   };\r\n//   const prev = () => {\r\n//     // Vòng lặp: Nếu index = 0, (0 - 1 + length) % length = length - 1\r\n//     setIndex((prev) => (prev - 1 + endows.length) % endows.length);\r\n//   };\r\n\r\n//   // tính phần trăm dịch chuyển (giữ nguyên)\r\n//   const offsetPercent = (100 / itemsPerPage) * index;\r\n\r\n//   return (\r\n//     <section className=\"endow-section\">\r\n//       <div className=\"endow-container\">\r\n//         <div className=\"endow-title\">\r\n//           Ưu đãi\r\n//           <br />\r\n//           đặc biệt\r\n//         </div>\r\n\r\n//         <div className=\"endow-slider-area\">\r\n//           {/* Nút prev chỉ hiển thị nếu có nhiều hơn số itemsPerPage */}\r\n//           {endows.length > itemsPerPage && (\r\n//             <button className=\"endow-arrow left\" onClick={prev}>\r\n//               <FaChevronLeft />\r\n//             </button>\r\n//           )}\r\n\r\n//           <div className=\"endow-viewport\">\r\n//             <div\r\n//               className=\"endow-track\"\r\n//               style={{\r\n//                 transform: `translateX(-${offsetPercent}%)`,\r\n//                 transition: \"transform 0.45s ease\",\r\n//               }}\r\n//             >\r\n//               {endows.map((item) => (\r\n//                 <article\r\n//                   key={item.ID}\r\n//                   className=\"endow-card\"\r\n//                   onClick={() => (window.location.href = `/endow/${item.ID}`)}\r\n//                 >\r\n//                   <img\r\n//                     className=\"endow-poster\"\r\n//                     alt={item.name}\r\n//                     src={require(`../../assets/images/Endow/${item.ID}.jpg`)}\r\n//                     onError={(e) => {\r\n//                       try {\r\n//                       } catch {\r\n//                         e.target.src = \"\";\r\n//                       }\r\n//                     }}\r\n//                   />\r\n//                   <h3 className=\"endow-name\">{item.name}</h3>\r\n//                 </article>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Nút next chỉ hiển thị nếu có nhiều hơn số itemsPerPage */}\r\n//           {endows.length > itemsPerPage && (\r\n//             <button className=\"endow-arrow right\" onClick={next}>\r\n//               <FaChevronRight />\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n// export default EndowList;\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./EndowList.css\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\n\r\nfunction EndowList() {\r\n  const [endows, setEndows] = useState([]);\r\n  const [offsetIndex, setOffsetIndex] = useState(0); // index inside extended array\r\n  const [isAnimating, setIsAnimating] = useState(true); // control css transition on track\r\n  const viewportRef = useRef(null);\r\n  const trackRef = useRef(null);\r\n\r\n  const itemsPerPage = 3;\r\n  const gap = 20; // PHẢI KHỚP VỚI CSS: .endow-track { gap: 20px; }\r\n  const [itemWidth, setItemWidth] = useState(300); // Giá trị giả định ban đầu\r\n\r\n  // fetch data (giữ nguyên)\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/endow\")\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Network error\");\r\n        return res.json();\r\n      })\r\n      .then((data) => setEndows(data || []))\r\n      .catch((err) => console.error(\"Lỗi fetch endows:\", err));\r\n  }, []);\r\n\r\n  // 1. Tính toán itemWidth dựa trên viewport và gap\r\n  useEffect(() => {\r\n    function recompute() {\r\n      if (!viewportRef.current) return;\r\n      const w = viewportRef.current.clientWidth;\r\n      const computed = Math.floor(\r\n        (w - gap * (itemsPerPage - 1)) / itemsPerPage\r\n      );\r\n      setItemWidth(computed > 100 ? computed : 300);\r\n    }\r\n    recompute();\r\n    window.addEventListener(\"resize\", recompute);\r\n    return () => window.removeEventListener(\"resize\", recompute);\r\n  }, [itemsPerPage]);\r\n\r\n  // 2. Khởi tạo vị trí ban đầu (Bản sao giữa)\r\n  useEffect(() => {\r\n    if (endows.length === 0) return;\r\n    setIsAnimating(false); // Vô hiệu hóa animation\r\n    setOffsetIndex(endows.length); // Đặt vị trí vào bản sao giữa\r\n    // Bật lại animation sau khi DOM đã render\r\n    const id = setTimeout(() => setIsAnimating(true), 20);\r\n    return () => clearTimeout(id);\r\n  }, [endows.length, itemWidth]);\r\n\r\n  // Extended array (3 copies)\r\n  const extended = [...endows, ...endows, ...endows];\r\n  const extendedCount = extended.length;\r\n  // Bước dịch chuyển (tính bằng pixel)\r\n  const step = itemWidth + gap;\r\n\r\n  // 3. Navigation\r\n  const next = () => {\r\n    if (endows.length === 0) return;\r\n    setIsAnimating(true);\r\n    setOffsetIndex((s) => s + 1);\r\n  };\r\n  const prev = () => {\r\n    if (endows.length === 0) return;\r\n    setIsAnimating(true);\r\n    setOffsetIndex((s) => s - 1);\r\n  };\r\n\r\n  // 4. Logic reset vị trí (Teleport) khi transition kết thúc\r\n  const onTrackTransitionEnd = () => {\r\n    if (endows.length === 0) return;\r\n\r\n    // Nếu đã trượt ra ngoài bản sao giữa (quá xa bên phải: index >= 2*length)\r\n    if (offsetIndex >= endows.length * 2) {\r\n      setIsAnimating(false);\r\n      setOffsetIndex((s) => s - endows.length);\r\n      setTimeout(() => setIsAnimating(true), 20);\r\n    }\r\n    // Nếu đã trượt ra ngoài bản sao giữa (quá xa bên trái: index < length)\r\n    else if (offsetIndex < endows.length) {\r\n      setIsAnimating(false);\r\n      setOffsetIndex((s) => s + endows.length);\r\n      setTimeout(() => setIsAnimating(true), 20);\r\n    }\r\n  };\r\n\r\n  // track inline style\r\n  const trackStyle = {\r\n    // Chiều rộng track phải bằng tổng chiều rộng của tất cả card\r\n    width: `${extendedCount * step - gap}px`,\r\n    // Dịch chuyển theo pixel\r\n    transform: `translateX(-${offsetIndex * step}px)`,\r\n    // Điều khiển transition\r\n    transition: isAnimating\r\n      ? \"transform 0.45s cubic-bezier(.22,.9,.18,1)\"\r\n      : \"none\",\r\n  };\r\n\r\n  return (\r\n    <section className=\"endow-section\">\r\n      <div className=\"endow-container\">\r\n        <div className=\"endow-title\">\r\n          Ưu đãi\r\n          <br />\r\n          đặc biệt\r\n        </div>\r\n\r\n        <div className=\"endow-slider-area\">\r\n          {endows.length > itemsPerPage && (\r\n            <button className=\"endow-arrow left\" onClick={prev}>\r\n              <FaChevronLeft />\r\n            </button>\r\n          )}\r\n\r\n          <div className=\"endow-viewport\" ref={viewportRef}>\r\n            <div\r\n              className=\"endow-track\"\r\n              ref={trackRef}\r\n              style={trackStyle}\r\n              onTransitionEnd={onTrackTransitionEnd}\r\n            >\r\n              {extended.map((item, idx) => (\r\n                <article\r\n                  key={`${item.ID}-${idx}`}\r\n                  className=\"endow-card\"\r\n                  onClick={() => (window.location.href = `/endow/${item.ID}`)}\r\n                  // Thiết lập chiều rộng card bằng pixel\r\n                  style={{\r\n                    width: `${itemWidth}px`,\r\n                    minWidth: `${itemWidth}px`,\r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"endow-poster\"\r\n                    alt={item.name}\r\n                    // FIX LỖI CÚ PHÁP REQUIRE: Sử dụng phép nối chuỗi an toàn\r\n                    src={require(`../../assets/images/Endow/${item.ID}.jpg`)}\r\n                    onError={(e) => {\r\n                      e.target.onerror = null;\r\n                      e.target.src = \"\";\r\n                    }}\r\n                  />\r\n                  <h3 className=\"endow-name\">{item.name}</h3>\r\n                </article>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Nút next */}\r\n          {endows.length > itemsPerPage && (\r\n            <button className=\"endow-arrow right\" onClick={next}>\r\n              <FaChevronRight />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EndowList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}