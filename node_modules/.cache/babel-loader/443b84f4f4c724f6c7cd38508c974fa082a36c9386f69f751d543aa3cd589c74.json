{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFolder\\\\VisualStudioCode\\\\Project\\\\Web\\\\bccinema\\\\frontend\\\\src\\\\components\\\\IncomingMovieList\\\\IncomingMovieList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useRef } from \"react\";\n// import \"./IncomingMovieList.css\";\n// import { FaPlay, FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\n\n// function IncomingMovieList() {\n//   const [films, setIncomings] = useState([]);\n//   const [offsetIndex, setOffsetIndex] = useState(0); // index inside extended array\n//   const [isAnimating, setIsAnimating] = useState(true); // control css transition on track\n//   const [showModal, setShowModal] = useState(false);\n//   const [modalUrl, setModalUrl] = useState(\"\");\n//   const viewportRef = useRef(null);\n//   const trackRef = useRef(null);\n\n//   const itemsPerPage = 5;\n//   const gap = 20; // must match .movie-track { gap: 20px; }\n//   const [itemWidth, setItemWidth] = useState(220);\n\n//   // load films\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/incoming\")\n//       .then((r) => r.json())\n//       .then((data) => setIncomings(data || []))\n//       .catch((e) => console.error(e));\n//   }, []);\n\n//   // compute itemWidth based on viewport and gap\n//   useEffect(() => {\n//     function recompute() {\n//       if (!viewportRef.current) return;\n//       const w = viewportRef.current.clientWidth;\n//       const computed = Math.floor(\n//         (w - gap * (itemsPerPage - 1)) / itemsPerPage\n//       );\n//       setItemWidth(computed > 100 ? computed : 120);\n//     }\n//     recompute();\n//     window.addEventListener(\"resize\", recompute);\n//     return () => window.removeEventListener(\"resize\", recompute);\n//   }, [itemsPerPage]);\n\n//   // once films + itemWidth ready, initialize offsetIndex to middle copy\n//   useEffect(() => {\n//     if (films.length === 0) return;\n//     // start at middle copy: films.length (first element of 2nd copy)\n//     setIsAnimating(false); // no anim for initial positioning\n//     setOffsetIndex(films.length);\n//     // re-enable animation next tick\n//     const id = setTimeout(() => setIsAnimating(true), 20);\n//     return () => clearTimeout(id);\n//   }, [films.length, itemWidth]);\n\n//   // extended array (3 copies)\n//   const extended = [...films, ...films, ...films];\n//   const extendedCount = extended.length;\n//   const step = itemWidth + gap;\n\n//   // next / prev circular by changing offsetIndex\n//   const next = () => {\n//     if (films.length === 0) return;\n//     setIsAnimating(true);\n//     setOffsetIndex((s) => s + 1);\n//   };\n//   const prev = () => {\n//     if (films.length === 0) return;\n//     setIsAnimating(true);\n//     setOffsetIndex((s) => s - 1);\n//   };\n\n//   // click dot: dot index corresponds to films index; map to middle copy\n//   const handleDotClick = (i) => {\n//     if (films.length === 0) return;\n//     setIsAnimating(true);\n//     setOffsetIndex(films.length + i);\n//   };\n\n//   // when transition ends, if we are out of middle copy range, jump back (no animation)\n//   const onTrackTransitionEnd = () => {\n//     if (films.length === 0) return;\n//     // if offsetIndex moved beyond middle copies, normalize it\n//     if (offsetIndex >= films.length * 2) {\n//       // moved too far right -> jump back by one films.length\n//       setIsAnimating(false);\n//       setOffsetIndex((s) => s - films.length);\n//       // re-enable animation after DOM update\n//       setTimeout(() => setIsAnimating(true), 20);\n//     } else if (offsetIndex < films.length) {\n//       // moved too far left -> jump forward by films.length\n//       setIsAnimating(false);\n//       setOffsetIndex((s) => s + films.length);\n//       setTimeout(() => setIsAnimating(true), 20);\n//     }\n//   };\n\n//   // modal handling (no autoplay by default)\n//   const openModalWith = (link) => {\n//     setModalUrl(link);\n//     setShowModal(true);\n//   };\n//   const closeModal = () => {\n//     setShowModal(false);\n//     setModalUrl(\"\");\n//   };\n//   useEffect(() => {\n//     const onKey = (e) => e.key === \"Escape\" && closeModal();\n//     window.addEventListener(\"keydown\", onKey);\n//     return () => window.removeEventListener(\"keydown\", onKey);\n//   }, []);\n\n//   // active dot (modulo films length)\n//   const activeDot = films.length\n//     ? ((offsetIndex % films.length) + films.length) % films.length\n//     : 0;\n\n//   // track inline style\n//   const trackStyle = {\n//     width: `${extendedCount * step}px`,\n//     transform: `translateX(-${offsetIndex * step}px)`,\n//     transition: isAnimating\n//       ? \"transform 0.45s cubic-bezier(.22,.9,.18,1)\"\n//       : \"none\",\n//   };\n\n//   return (\n//     <section className=\"incoming-movie-list-container\">\n//       <h2 className=\"incoming-movie-list-title\">\n//         <span className=\"incoming-movie-list-title-inner\">PHIM SẮP CHIẾU</span>\n//       </h2>\n\n//       <button\n//         className=\"incomingmovielist arrow left\"\n//         onClick={prev}\n//         aria-label=\"Prev\"\n//       >\n//         <FaChevronLeft />\n//       </button>\n//       <button\n//         className=\"incomingmovielist arrow right\"\n//         onClick={next}\n//         aria-label=\"Next\"\n//       >\n//         <FaChevronRight />\n//       </button>\n\n//       <div className=\"incoming-movie-slider-viewport\" ref={viewportRef}>\n//         <div\n//           className=\"incoming-movie-track\"\n//           ref={trackRef}\n//           style={trackStyle}\n//           onTransitionEnd={onTrackTransitionEnd}\n//         >\n//           {extended.map((film, idx) => {\n//             // if films empty, render empty slot\n//             if (!film)\n//               return (\n//                 <div\n//                   key={`empty-${idx}`}\n//                   className=\"incoming-movie-card incoming-movie-card--empty\"\n//                   style={{ width: itemWidth }}\n//                 />\n//               );\n//             return (\n//               <article\n//                 key={`${film.ID}-${idx}`}\n//                 className=\"incoming-movie-card\"\n//                 style={{ width: `${itemWidth}px`, minWidth: `${itemWidth}px` }}\n//               >\n//                 <div\n//                   className=\"incoming-poster-wrapper\"\n//                   onClick={() => (window.location.href = `/film/${film.ID}`)}\n//                 >\n//                   <img\n//                     className=\"incoming-movie-poster\"\n//                     alt={film.name}\n//                     src={require(`../../assets/images/Incoming/${film.ID}.jpg`)}\n//                   />\n//                   <div className=\"card-overlay\" />\n//                   <div className=\"overlay-buttons\">\n//                     {film.link && (\n//                       <button\n//                         className=\"btn play\"\n//                         onClick={(e) => {\n//                           e.stopPropagation();\n//                           openModalWith(film.link);\n//                         }}\n//                       >\n//                         <FaPlay />\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n\n//                 <h3 className=\"incoming-movie-name\" title={film.name}>\n//                   {film.name}\n//                 </h3>\n//                 <p className=\"incoming-movie-type\">Thể loại: {film.type}</p>\n//               </article>\n//             );\n//           })}\n//         </div>\n//       </div>\n\n//       <div className=\" incomingmovielist carousel-dots\">\n//         {films.map((_, idx) => (\n//           <button\n//             key={idx}\n//             className={`incomingmovielist dot ${\n//               idx === activeDot ? \"active\" : \"\"\n//             }`}\n//             onClick={() => handleDotClick(idx)}\n//             aria-label={`Go to ${idx + 1}`}\n//           />\n//         ))}\n//       </div>\n\n//       {showModal && (\n//         <div\n//           className=\"video-modal-overlay\"\n//           onMouseDown={(e) => {\n//             if (e.target.classList.contains(\"video-modal-overlay\"))\n//               closeModal();\n//           }}\n//         >\n//           <div className=\"video-modal\">\n//             <div className=\"video-wrapper\">\n//               {/* note: no autoplay in embed URL so it won't auto-play */}\n//               {modalUrl.includes(\"youtube.com\") ||\n//               modalUrl.includes(\"youtu.be\") ? (\n//                 <iframe\n//                   title=\"Trailer\"\n//                   src={convertYoutubeToEmbed(modalUrl, false)} // autoplay=false\n//                   frameBorder=\"0\"\n//                   allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                   allowFullScreen\n//                 />\n//               ) : (\n//                 <iframe\n//                   title=\"Trailer\"\n//                   src={modalUrl}\n//                   frameBorder=\"0\"\n//                   allowFullScreen\n//                 />\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </section>\n//   );\n// }\n\n// // convert youtube url -> embed, autoplay optional\n// function convertYoutubeToEmbed(url, autoplay = false) {\n//   try {\n//     const u = new URL(url);\n//     let id = \"\";\n//     if (u.hostname.includes(\"youtu.be\")) id = u.pathname.slice(1);\n//     else id = u.searchParams.get(\"v\");\n//     if (!id) return url;\n//     return `https://www.youtube.com/embed/${id}?rel=0${\n//       autoplay ? \"&autoplay=1\" : \"\"\n//     }`;\n//   } catch {\n//     return url;\n//   }\n// }\n\n// export default IncomingMovieList;\n\nimport React, { useState, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport \"./IncomingMovieList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomingMovieList = ({\n  films\n}) => {\n  _s();\n  const [offsetIndex, setOffsetIndex] = useState(0);\n  const trackRef = useRef(null);\n  const step = 220; // width card + margin\n  const extendedCount = films.length;\n  const animateTransition = direction => {\n    if (!trackRef.current) return;\n    const cards = trackRef.current.querySelectorAll(\".incoming-movie-card\");\n    const activeCard = cards[offsetIndex % films.length];\n    const nextCard = cards[(offsetIndex + (direction === \"next\" ? 1 : -1) + films.length) % films.length];\n    if (!activeCard || !nextCard) return;\n    const tl = gsap.timeline({\n      defaults: {\n        duration: 0.45,\n        ease: \"power3.inOut\"\n      },\n      onComplete: () => {\n        setOffsetIndex(s => (s + (direction === \"next\" ? 1 : -1) + films.length) % films.length);\n      }\n    });\n\n    // Card hiện tại fadeOut + xoay + shrink\n    tl.to(activeCard, {\n      opacity: 0,\n      rotateY: direction === \"next\" ? -60 : 60,\n      scale: 0.7,\n      filter: \"blur(6px)\"\n    });\n\n    // Card kế tiếp fadeIn + scale về 1\n    tl.fromTo(nextCard, {\n      opacity: 0,\n      rotateY: direction === \"next\" ? 60 : -60,\n      scale: 0.7,\n      filter: \"blur(6px)\"\n    }, {\n      opacity: 1,\n      rotateY: 0,\n      scale: 1,\n      filter: \"blur(0px)\"\n    }, \"-=0.2\");\n  };\n  const next = () => animateTransition(\"next\");\n  const prev = () => animateTransition(\"prev\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"incoming-movie-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-btn prev\",\n      onClick: prev,\n      children: \"\\u25C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"incoming-movie-slider\",\n      ref: trackRef,\n      children: films.map((film, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `incoming-movie-card ${index === offsetIndex ? \"active\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: film.poster,\n          alt: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-btn next\",\n      onClick: next,\n      children: \"\\u25B6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n_s(IncomingMovieList, \"xxgRXb5rizZBmtekd48fnTrHGG0=\");\n_c = IncomingMovieList;\nexport default IncomingMovieList;\nvar _c;\n$RefreshReg$(_c, \"IncomingMovieList\");","map":{"version":3,"names":["React","useState","useRef","gsap","jsxDEV","_jsxDEV","IncomingMovieList","films","_s","offsetIndex","setOffsetIndex","trackRef","step","extendedCount","length","animateTransition","direction","current","cards","querySelectorAll","activeCard","nextCard","tl","timeline","defaults","duration","ease","onComplete","s","to","opacity","rotateY","scale","filter","fromTo","next","prev","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","film","index","src","poster","alt","title","_c","$RefreshReg$"],"sources":["D:/MyFolder/VisualStudioCode/Project/Web/bccinema/frontend/src/components/IncomingMovieList/IncomingMovieList.js"],"sourcesContent":["// import React, { useEffect, useState, useRef } from \"react\";\r\n// import \"./IncomingMovieList.css\";\r\n// import { FaPlay, FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\n\r\n// function IncomingMovieList() {\r\n//   const [films, setIncomings] = useState([]);\r\n//   const [offsetIndex, setOffsetIndex] = useState(0); // index inside extended array\r\n//   const [isAnimating, setIsAnimating] = useState(true); // control css transition on track\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [modalUrl, setModalUrl] = useState(\"\");\r\n//   const viewportRef = useRef(null);\r\n//   const trackRef = useRef(null);\r\n\r\n//   const itemsPerPage = 5;\r\n//   const gap = 20; // must match .movie-track { gap: 20px; }\r\n//   const [itemWidth, setItemWidth] = useState(220);\r\n\r\n//   // load films\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/incoming\")\r\n//       .then((r) => r.json())\r\n//       .then((data) => setIncomings(data || []))\r\n//       .catch((e) => console.error(e));\r\n//   }, []);\r\n\r\n//   // compute itemWidth based on viewport and gap\r\n//   useEffect(() => {\r\n//     function recompute() {\r\n//       if (!viewportRef.current) return;\r\n//       const w = viewportRef.current.clientWidth;\r\n//       const computed = Math.floor(\r\n//         (w - gap * (itemsPerPage - 1)) / itemsPerPage\r\n//       );\r\n//       setItemWidth(computed > 100 ? computed : 120);\r\n//     }\r\n//     recompute();\r\n//     window.addEventListener(\"resize\", recompute);\r\n//     return () => window.removeEventListener(\"resize\", recompute);\r\n//   }, [itemsPerPage]);\r\n\r\n//   // once films + itemWidth ready, initialize offsetIndex to middle copy\r\n//   useEffect(() => {\r\n//     if (films.length === 0) return;\r\n//     // start at middle copy: films.length (first element of 2nd copy)\r\n//     setIsAnimating(false); // no anim for initial positioning\r\n//     setOffsetIndex(films.length);\r\n//     // re-enable animation next tick\r\n//     const id = setTimeout(() => setIsAnimating(true), 20);\r\n//     return () => clearTimeout(id);\r\n//   }, [films.length, itemWidth]);\r\n\r\n//   // extended array (3 copies)\r\n//   const extended = [...films, ...films, ...films];\r\n//   const extendedCount = extended.length;\r\n//   const step = itemWidth + gap;\r\n\r\n//   // next / prev circular by changing offsetIndex\r\n//   const next = () => {\r\n//     if (films.length === 0) return;\r\n//     setIsAnimating(true);\r\n//     setOffsetIndex((s) => s + 1);\r\n//   };\r\n//   const prev = () => {\r\n//     if (films.length === 0) return;\r\n//     setIsAnimating(true);\r\n//     setOffsetIndex((s) => s - 1);\r\n//   };\r\n\r\n//   // click dot: dot index corresponds to films index; map to middle copy\r\n//   const handleDotClick = (i) => {\r\n//     if (films.length === 0) return;\r\n//     setIsAnimating(true);\r\n//     setOffsetIndex(films.length + i);\r\n//   };\r\n\r\n//   // when transition ends, if we are out of middle copy range, jump back (no animation)\r\n//   const onTrackTransitionEnd = () => {\r\n//     if (films.length === 0) return;\r\n//     // if offsetIndex moved beyond middle copies, normalize it\r\n//     if (offsetIndex >= films.length * 2) {\r\n//       // moved too far right -> jump back by one films.length\r\n//       setIsAnimating(false);\r\n//       setOffsetIndex((s) => s - films.length);\r\n//       // re-enable animation after DOM update\r\n//       setTimeout(() => setIsAnimating(true), 20);\r\n//     } else if (offsetIndex < films.length) {\r\n//       // moved too far left -> jump forward by films.length\r\n//       setIsAnimating(false);\r\n//       setOffsetIndex((s) => s + films.length);\r\n//       setTimeout(() => setIsAnimating(true), 20);\r\n//     }\r\n//   };\r\n\r\n//   // modal handling (no autoplay by default)\r\n//   const openModalWith = (link) => {\r\n//     setModalUrl(link);\r\n//     setShowModal(true);\r\n//   };\r\n//   const closeModal = () => {\r\n//     setShowModal(false);\r\n//     setModalUrl(\"\");\r\n//   };\r\n//   useEffect(() => {\r\n//     const onKey = (e) => e.key === \"Escape\" && closeModal();\r\n//     window.addEventListener(\"keydown\", onKey);\r\n//     return () => window.removeEventListener(\"keydown\", onKey);\r\n//   }, []);\r\n\r\n//   // active dot (modulo films length)\r\n//   const activeDot = films.length\r\n//     ? ((offsetIndex % films.length) + films.length) % films.length\r\n//     : 0;\r\n\r\n//   // track inline style\r\n//   const trackStyle = {\r\n//     width: `${extendedCount * step}px`,\r\n//     transform: `translateX(-${offsetIndex * step}px)`,\r\n//     transition: isAnimating\r\n//       ? \"transform 0.45s cubic-bezier(.22,.9,.18,1)\"\r\n//       : \"none\",\r\n//   };\r\n\r\n//   return (\r\n//     <section className=\"incoming-movie-list-container\">\r\n//       <h2 className=\"incoming-movie-list-title\">\r\n//         <span className=\"incoming-movie-list-title-inner\">PHIM SẮP CHIẾU</span>\r\n//       </h2>\r\n\r\n//       <button\r\n//         className=\"incomingmovielist arrow left\"\r\n//         onClick={prev}\r\n//         aria-label=\"Prev\"\r\n//       >\r\n//         <FaChevronLeft />\r\n//       </button>\r\n//       <button\r\n//         className=\"incomingmovielist arrow right\"\r\n//         onClick={next}\r\n//         aria-label=\"Next\"\r\n//       >\r\n//         <FaChevronRight />\r\n//       </button>\r\n\r\n//       <div className=\"incoming-movie-slider-viewport\" ref={viewportRef}>\r\n//         <div\r\n//           className=\"incoming-movie-track\"\r\n//           ref={trackRef}\r\n//           style={trackStyle}\r\n//           onTransitionEnd={onTrackTransitionEnd}\r\n//         >\r\n//           {extended.map((film, idx) => {\r\n//             // if films empty, render empty slot\r\n//             if (!film)\r\n//               return (\r\n//                 <div\r\n//                   key={`empty-${idx}`}\r\n//                   className=\"incoming-movie-card incoming-movie-card--empty\"\r\n//                   style={{ width: itemWidth }}\r\n//                 />\r\n//               );\r\n//             return (\r\n//               <article\r\n//                 key={`${film.ID}-${idx}`}\r\n//                 className=\"incoming-movie-card\"\r\n//                 style={{ width: `${itemWidth}px`, minWidth: `${itemWidth}px` }}\r\n//               >\r\n//                 <div\r\n//                   className=\"incoming-poster-wrapper\"\r\n//                   onClick={() => (window.location.href = `/film/${film.ID}`)}\r\n//                 >\r\n//                   <img\r\n//                     className=\"incoming-movie-poster\"\r\n//                     alt={film.name}\r\n//                     src={require(`../../assets/images/Incoming/${film.ID}.jpg`)}\r\n//                   />\r\n//                   <div className=\"card-overlay\" />\r\n//                   <div className=\"overlay-buttons\">\r\n//                     {film.link && (\r\n//                       <button\r\n//                         className=\"btn play\"\r\n//                         onClick={(e) => {\r\n//                           e.stopPropagation();\r\n//                           openModalWith(film.link);\r\n//                         }}\r\n//                       >\r\n//                         <FaPlay />\r\n//                       </button>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <h3 className=\"incoming-movie-name\" title={film.name}>\r\n//                   {film.name}\r\n//                 </h3>\r\n//                 <p className=\"incoming-movie-type\">Thể loại: {film.type}</p>\r\n//               </article>\r\n//             );\r\n//           })}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\" incomingmovielist carousel-dots\">\r\n//         {films.map((_, idx) => (\r\n//           <button\r\n//             key={idx}\r\n//             className={`incomingmovielist dot ${\r\n//               idx === activeDot ? \"active\" : \"\"\r\n//             }`}\r\n//             onClick={() => handleDotClick(idx)}\r\n//             aria-label={`Go to ${idx + 1}`}\r\n//           />\r\n//         ))}\r\n//       </div>\r\n\r\n//       {showModal && (\r\n//         <div\r\n//           className=\"video-modal-overlay\"\r\n//           onMouseDown={(e) => {\r\n//             if (e.target.classList.contains(\"video-modal-overlay\"))\r\n//               closeModal();\r\n//           }}\r\n//         >\r\n//           <div className=\"video-modal\">\r\n//             <div className=\"video-wrapper\">\r\n//               {/* note: no autoplay in embed URL so it won't auto-play */}\r\n//               {modalUrl.includes(\"youtube.com\") ||\r\n//               modalUrl.includes(\"youtu.be\") ? (\r\n//                 <iframe\r\n//                   title=\"Trailer\"\r\n//                   src={convertYoutubeToEmbed(modalUrl, false)} // autoplay=false\r\n//                   frameBorder=\"0\"\r\n//                   allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               ) : (\r\n//                 <iframe\r\n//                   title=\"Trailer\"\r\n//                   src={modalUrl}\r\n//                   frameBorder=\"0\"\r\n//                   allowFullScreen\r\n//                 />\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n// // convert youtube url -> embed, autoplay optional\r\n// function convertYoutubeToEmbed(url, autoplay = false) {\r\n//   try {\r\n//     const u = new URL(url);\r\n//     let id = \"\";\r\n//     if (u.hostname.includes(\"youtu.be\")) id = u.pathname.slice(1);\r\n//     else id = u.searchParams.get(\"v\");\r\n//     if (!id) return url;\r\n//     return `https://www.youtube.com/embed/${id}?rel=0${\r\n//       autoplay ? \"&autoplay=1\" : \"\"\r\n//     }`;\r\n//   } catch {\r\n//     return url;\r\n//   }\r\n// }\r\n\r\n// export default IncomingMovieList;\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport gsap from \"gsap\";\r\nimport \"./IncomingMovieList.css\";\r\n\r\nconst IncomingMovieList = ({ films }) => {\r\n  const [offsetIndex, setOffsetIndex] = useState(0);\r\n  const trackRef = useRef(null);\r\n\r\n  const step = 220; // width card + margin\r\n  const extendedCount = films.length;\r\n\r\n  const animateTransition = (direction) => {\r\n    if (!trackRef.current) return;\r\n\r\n    const cards = trackRef.current.querySelectorAll(\".incoming-movie-card\");\r\n    const activeCard = cards[offsetIndex % films.length];\r\n    const nextCard =\r\n      cards[\r\n        (offsetIndex + (direction === \"next\" ? 1 : -1) + films.length) %\r\n          films.length\r\n      ];\r\n\r\n    if (!activeCard || !nextCard) return;\r\n\r\n    const tl = gsap.timeline({\r\n      defaults: { duration: 0.45, ease: \"power3.inOut\" },\r\n      onComplete: () => {\r\n        setOffsetIndex(\r\n          (s) =>\r\n            (s + (direction === \"next\" ? 1 : -1) + films.length) % films.length\r\n        );\r\n      },\r\n    });\r\n\r\n    // Card hiện tại fadeOut + xoay + shrink\r\n    tl.to(activeCard, {\r\n      opacity: 0,\r\n      rotateY: direction === \"next\" ? -60 : 60,\r\n      scale: 0.7,\r\n      filter: \"blur(6px)\",\r\n    });\r\n\r\n    // Card kế tiếp fadeIn + scale về 1\r\n    tl.fromTo(\r\n      nextCard,\r\n      {\r\n        opacity: 0,\r\n        rotateY: direction === \"next\" ? 60 : -60,\r\n        scale: 0.7,\r\n        filter: \"blur(6px)\",\r\n      },\r\n      { opacity: 1, rotateY: 0, scale: 1, filter: \"blur(0px)\" },\r\n      \"-=0.2\"\r\n    );\r\n  };\r\n\r\n  const next = () => animateTransition(\"next\");\r\n  const prev = () => animateTransition(\"prev\");\r\n\r\n  return (\r\n    <div className=\"incoming-movie-container\">\r\n      <button className=\"nav-btn prev\" onClick={prev}>\r\n        ◀\r\n      </button>\r\n      <div className=\"incoming-movie-slider\" ref={trackRef}>\r\n        {films.map((film, index) => (\r\n          <div\r\n            key={index}\r\n            className={`incoming-movie-card ${\r\n              index === offsetIndex ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <img src={film.poster} alt={film.title} />\r\n            <h4>{film.title}</h4>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"nav-btn next\" onClick={next}>\r\n        ▶\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomingMovieList;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}